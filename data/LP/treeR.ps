%!PS-Adobe-2.0 EPSF-1.2
%%Title: TreePlot
%%Creator: treeplot.c
%%CreationDate: Tue Oct 24 14:42:46 2017
%%BoundingBox: 72 144 522 700
%%EndComments
%%BeginProlog
/treedict 100 dict def
treedict begin
% x y  => min(x,y)
  /min { 2 copy gt { exch } if pop } bind def
  /max { 2 copy lt { exch } if pop } bind def
  /cmtx matrix currentmatrix def
  /STR 128 string def
  /NumH 1 def
% - => -
  /Init {
    /LX [
      LEAF {0 get} forall
    ] def

    /Helvetica findfont fsize scalefont setfont
    /Lo [
      (X) stringwidth pop % width
      newpath 0 0 moveto
      (X) true charpath
      flattenpath pathbbox
      pop exch pop exch sub neg 2 div % height
     ] def
  } def
% - => -
  /DrawScale {
  gsave 
    maxy miny sub 30 div dup maxy add /maxy exch def miny sub /miny def
    maxy miny sub log 0.9 sub floor 10 exch exp /tick exch def
    newpath
    LEAF length 0.5 sub 0 translate 0 miny moveto 0 maxy miny sub rlineto
    miny tick div ceiling tick mul dup 0 exch moveto 
    maxy exch sub tick div cvi 1 add dup { % draw minor ticks
      0.15 0 rlineto
      -0.15 tick rmoveto
    } repeat
    % calculate major tick spacing (10, 5, or 2 minor ticks)
    dup 69 gt { pop 10
    } {
      32 gt { 5 }
      {2} ifelse
    } ifelse
    tick mul /mtick exch def
    miny mtick div ceiling mtick mul dup 0 exch moveto
    maxy exch sub mtick div cvi 1 add {
      0.3 0 rlineto 
      gsave currentpoint 10 mul round 10 div cmtx setmatrix
      STR cvs dup stringwidth pop
      Lo aload pop 3 1 roll add neg exch rmoveto show pop
      grestore
      -0.3 mtick rmoveto
    } repeat
    cmtx setmatrix stroke    
  grestore
  } def
% - => -
  /SetBarFont {
    matrix currentmatrix cmtx setmatrix
    /Helvetica findfont fbsize scalefont setfont
    setmatrix
  } bind def
% - => -
  /SetLabelFont {
    matrix currentmatrix cmtx setmatrix
    /Courier findfont fsize scalefont setfont
    setmatrix
  } bind def
% str => -
  /Rotshow {
    gsave
      dup type () type eq
      { 1 0 0 setrgbcolor }
      { STR cvs }ifelse
      cmtx setmatrix -90 rotate
      Lo aload pop
      rmoveto show
    grestore
  } def
% dy => - 
  /Rlineto {
    dup abs MinHeight ge { % draw height at middle of line
      dup gsave
	dup 2 div 0 exch rmoveto
	cmtx setmatrix -90 rotate
	abs STR cvs dup stringwidth pop 2 div neg
	//NumH rmoveto
	show
      grestore
    } if
    0 exch rlineto
  } def
% - => -
  /Drawlabels {
   0 LEAF {
      aload pop moveto
      dup LABEL exch get Rotshow
      1 add
    } forall pop
  } def
% n => n'    Detect whether a minimum is connected
  /MRX {
     /murxi { true } def
     dup 0 lt { pop 0 /murxi { false } def } if
  } def
% - => -
  /Connectlmins {
    newpath
    SADDEL {
      /forest {false} def  %  draw as tree or forest node
      aload pop exch dup 0 lt { pop 0 /forest {true} def} if   % => c h f
      dup LX exch get [ exch LX 5 index get add 2 div % => c h f [ nx
      3 index ]				         % => c h f [ nx h ]
      3 -1 roll dup LEAF 6 -1 roll get aload pop % => f [nx h] h h cx cy
      dup 3 1 roll moveto		         % => f [] h h cy
      sub Rlineto                                % => f [] h
      LEAF 3 index get aload pop exch		 % => f [] h fy fx
      2 index forest {moveto} {lineto} ifelse 
      sub neg Rlineto			         % => f [] h fy
      LEAF 3 1 roll put
    } forall
    gsave
      cmtx setmatrix stroke
    grestore
  } def
% data starts here!!!
  /LABEL [
   (1)   2   3   4   5   6   7   8 (9)  10 
    11  12  13  14  15  16  17  18  19  20 
    21  22  23  24  25  26  27  28  29  30 
    31  32  33  34  35  36  37  38  39  40 
    41 (42)  43  44  45  46  47  48  49  50 
    51  52  53  54  55  56  57  58  59  60 
    61  62  63  64  65  66  67 (68)  69  70 
    71  72  73  74  75  76 (77)  78  79  80 
    81  82  83  84 (85)  86  87  88  89 (90) 
    91  92  93  94  95  96  97  98  99 (100) 
  ] def
% leaf node coordinates
  /LEAF [
   [0    -7.421] [0    -7.472] [0    -7.156] [1    -4.678] [0    -4.530] 
   [0    -4.010] [0    -3.425] [37   -3.590] [0    -3.187] [0    -3.238] 
   [3    -3.249] [2    -3.132] [4    -2.554] [5    -1.811] [38   -1.561] 
   [0    -1.505] [39   -1.192] [19   -0.987] [40   -1.057] [44   -0.881] 
   [20   -0.846] [6    -0.607] [45   -0.492] [0    -0.307] [46   -0.372] 
   [7    -0.303] [31   -0.293] [0    -0.251] [12   -0.150] [0     0.054] 
   [32    0.225] [47    0.235] [0     0.372] [0     0.323] [10    0.341] 
   [0     0.515] [13    0.280] [41    0.584] [0     0.643] [9     0.701] 
   [0     0.809] [0     0.672] [0     0.621] [48    0.395] [14    0.846] 
   [49    0.662] [42    0.890] [50    1.036] [35    1.095] [8     1.241] 
   [0     1.182] [11    1.251] [53    1.334] [0     1.001] [52    1.137] 
   [54    1.457] [0     1.365] [55    1.484] [56    1.603] [15    1.823] 
   [27    1.637] [16    1.853] [51    1.099] [21    1.921] [57    1.756] 
   [0     1.984] [22    1.901] [0     1.999] [58    2.176] [0     2.022] 
   [43    1.948] [0     2.170] [17    1.944] [26    2.203] [0     1.871] 
   [28    2.001] [0     2.279] [0     2.230] [23    2.394] [36    2.559] 
   [24    2.510] [29    2.689] [0     2.605] [33    2.462] [0     2.238] 
   [0     2.199] [0     2.327] [0     2.466] [30    2.747] [0     2.761] 
   [0     2.711] [0     2.549] [34    2.964] [18    2.670] [0     2.859] 
   [0     3.004] [25    3.180] [0     2.723] [0     2.832] [0     2.822]   
] def
% internal nodes (saddle) coordinates, sorted by height
  /SADDEL [
   [  3   2  -2.385] [  5   4  -2.312] [  6   1  -2.246] [ 11   2  -1.791] 
   [  9   1  -1.195] [  8   0  -1.144] [ 10   2  -0.413] [ 13  12  -0.278] 
   [  4   1  -0.025] [ 21  12   0.089] [ 27   1   0.374] [ 12   2   0.500] 
   [ 25   2   0.505] [ 49   2   1.105] [ 33   1   1.338] [ 23   1   1.351] 
   [ 20  17   1.365] [ 37  18   1.377] [ 46  18   1.586] [ 39   2   1.706] 
   [ 35   1   1.788] [ 36  28   1.917] [ 30  26   1.923] [ 44  28   2.059] 
   [ 63  17   2.292] [ 34   2   2.361] [ 42   1   2.469] [ 59  28   2.519] 
   [ 41   0   2.533] [ 32   1   2.761] [ 15   1   3.255] [ 29   1   3.472] 
   [ 74  53   3.476] [ 70  18   3.521] [ 53   1   3.616] [ 65   1   3.667] 
   [ 67   0   3.704] [ 38   1   3.718] [ 85   1   3.838] [ 50   1   3.916] 
   [ 90   1   3.978] [ 89   0   4.031] [ 84   0   4.077] [ 94   1   4.119] 
   [ 91   1   4.231] [ 51   2   4.334] [ 56   1   4.367] [ 95   1   4.438] 
   [ 99   0   4.445] [ 98   1   4.494] [ 69   1   4.538] [ 77   1   4.548] 
   [ 76   0   4.591] [ 97   1   4.613] [ 40   1   4.621] [ 86   1   4.623] 
   [ 28   2   4.650] [ 71   1   4.681] [ 82   1   4.832] [ 87   1   4.844] 
   [  2   1   5.013] [ 61   1   5.116] [ 72   1   5.225] [ 93   1   5.240] 
   [ 17   1   5.283] [ 66   1   5.512] [ 78   1   5.704] [ 80   1   5.847] 
   [ 96   1   6.023] [ 73   1   6.338] [ 60   1   6.348] [ 75   1   6.365] 
   [ 81   1   6.369] [ 88   1   6.719] [ 26   1   6.753] [ 83   1   7.120] 
   [ 92   1   7.261] [ 48   1   7.383] [ 79   1   8.850] [  1  -1  12.801] 
   [  0  -1  12.801] [  7   2     inf] [ 14   2     inf] [ 16   2     inf] 
   [ 18   2     inf] [ 19   2     inf] [ 22   2     inf] [ 24   2     inf] 
   [ 31   2     inf] [ 43   2     inf] [ 45   2     inf] [ 47   2     inf] 
   [ 62   2     inf] [ 54   2     inf] [ 52   2     inf] [ 55   2     inf] 
   [ 57   2     inf] [ 58   2     inf] [ 64   2     inf] [ 68   2     inf]   
] def
end
%%EndProlog
treedict begin
  /fsize 10 def
  /fbsize 7 def
  Init
  521 144 fsize 1.5 mul add translate
  72 521 sub LEAF length div % x-scale
  699 144 fsize dup add add sub
  SADDEL dup length 1 sub get 2 get /maxy exch def % max height
  9999999 LEAF { aload pop exch pop min } forall
  /miny exch def % min height
  maxy miny sub dup 20 div /MinHeight exch def
  div scale
  .5 LEAF 0 get 1 get neg translate
  SetLabelFont
  Drawlabels
  DrawScale
  SetBarFont
  Connectlmins
  showpage
end
%%EOF
