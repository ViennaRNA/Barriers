%!PS-Adobe-2.0 EPSF-1.2
%%Title: TreePlot
%%Creator: treeplot.c
%%CreationDate: Mon Jul 17 11:47:26 2006
%%BoundingBox: 72 144 522 700
%%EndComments
%%BeginProlog
/treedict 100 dict def
treedict begin
% x y  => min(x,y)
  /min { 2 copy gt { exch } if pop } bind def
  /max { 2 copy lt { exch } if pop } bind def
  /cmtx matrix currentmatrix def
  /STR 128 string def
  /NumH 1 def
% - => -
  /Init {
    /LX [
      LEAF {0 get} forall
    ] def

    /Helvetica findfont fsize scalefont setfont
    /Lo [
      (X) stringwidth pop % width
      newpath 0 0 moveto
      (X) true charpath
      flattenpath pathbbox
      pop exch pop exch sub neg 2 div % height
     ] def
  } def
% - => -
  /DrawScale {
  gsave 
    maxy miny sub 30 div dup maxy add /maxy exch def miny sub /miny def
    maxy miny sub log 0.9 sub floor 10 exch exp /tick exch def
    newpath
    LEAF length 0.5 sub 0 translate 0 miny moveto 0 maxy miny sub rlineto
    miny tick div ceiling tick mul dup 0 exch moveto 
    maxy exch sub tick div cvi 1 add dup { % draw minor ticks
      0.15 0 rlineto
      -0.15 tick rmoveto
    } repeat
    % calculate major tick spacing (10, 5, or 2 minor ticks)
    dup 69 gt { pop 10
    } {
      32 gt { 5 }
      {2} ifelse
    } ifelse
    tick mul /mtick exch def
    miny mtick div ceiling mtick mul dup 0 exch moveto
    maxy exch sub mtick div cvi 1 add {
      0.3 0 rlineto 
      gsave currentpoint 10 mul round 10 div cmtx setmatrix
      STR cvs dup stringwidth pop
      Lo aload pop 3 1 roll add neg exch rmoveto show pop
      grestore
      -0.3 mtick rmoveto
    } repeat
    cmtx setmatrix stroke    
  grestore
  } def
% - => -
  /SetBarFont {
    matrix currentmatrix cmtx setmatrix
    /Helvetica findfont fbsize scalefont setfont
    setmatrix
  } bind def
% - => -
  /SetLabelFont {
    matrix currentmatrix cmtx setmatrix
    /Courier findfont fsize scalefont setfont
    setmatrix
  } bind def
% str => -
  /Rotshow {
    gsave
      cmtx setmatrix -90 rotate
      Lo aload pop
      rmoveto show
    grestore
  } def
% dy => - 
  /Rlineto {
    dup abs MinHeight ge { % draw height at middle of line
      dup gsave
	dup 2 div 0 exch rmoveto
	cmtx setmatrix -90 rotate
	abs STR cvs dup stringwidth pop 2 div neg
	//NumH rmoveto
	show
      grestore
    } if
    0 exch rlineto
  } def
% - => -
  /Drawlabels {
   0 LEAF {
      aload pop moveto
      dup LABEL exch get STR cvs Rotshow
      1 add
    } forall pop
  } def
% n => n'    Detect whether a minimum is connected
  /MRX {
     /murxi { true } def
     dup 0 lt { pop 0 /murxi { false } def } if
  } def
% - => -
  /Connectlmins {
    newpath
    SADDEL {
      /forest {false} def  %  draw as tree or forest node
      aload pop exch dup 0 lt { pop 0 /forest {true} def} if   % => c h f
      dup LX exch get [ exch LX 5 index get add 2 div % => c h f [ nx
      3 index ]				         % => c h f [ nx h ]
      3 -1 roll dup LEAF 6 -1 roll get aload pop % => f [nx h] h h cx cy
      dup 3 1 roll moveto		         % => f [] h h cy
      sub Rlineto                                % => f [] h
      LEAF 3 index get aload pop exch		 % => f [] h fy fx
      2 index forest {moveto} {lineto} ifelse 
      sub neg Rlineto			         % => f [] h fy
      LEAF 3 1 roll put
    } forall
    gsave
      cmtx setmatrix stroke
    grestore
  } def
% data starts here!!!
  /LABEL [
     1   2   3   4   5   6   7   8   9  10 
    11  12  13  14  15  16  17  18  19  20 
    21  22  23  24  25  26  27  28  29  30 
    31  32  33  34  35  36  37  38  39  40 
    41  42  43  44  45  46  47  48 
  ] def
% leaf node coordinates
  /LEAF [
   [0   -12.100] [1   -12.000] [4   -11.500] [2   -11.500] [3   -11.500] 
   [5   -10.600] [7   -10.200] [17   -9.100] [16   -9.100] [8    -9.100] 
   [6    -9.000] [18   -8.900] [21   -8.800] [22   -8.700] [9    -8.600] 
   [10   -8.400] [13   -8.300] [25   -8.300] [24   -8.300] [23   -8.300] 
   [11   -8.300] [32   -8.200] [31   -8.200] [30   -8.200] [29   -8.200] 
   [27   -8.200] [14   -8.200] [19   -8.200] [34   -7.900] [33   -7.900] 
   [12   -6.800] [39   -6.500] [38   -6.500] [37   -6.500] [36   -6.500] 
   [35   -6.500] [28   -6.400] [44   -6.400] [43   -6.400] [42   -6.400] 
   [15   -6.400] [20   -6.400] [41   -6.400] [40   -6.400] [26   -6.400] 
   [45   -6.200] [46   -5.900] [47   -5.900]   
] def
% internal nodes (saddle) coordinates, sorted by height
  /SADDEL [
   [  4   3 -11.300] [  5   2 -10.400] [ 10   2  -8.800] [ 15  14  -8.200] 
   [ 20  14  -8.200] [ 26  16  -8.000] [ 30  14  -6.600] [ 14   9  -6.200] 
   [ 16   9  -6.200] [ 27  11  -6.200] [ 44  17  -6.200] [ 41  11  -6.200] 
   [ 40   9  -6.200] [ 36  25  -6.200] [ 47  46  -5.700] [  0  -1  -5.699] 
   [  1  -1  -5.699] [  3  -1  -5.699] [  2  -1  -5.699] [  6  -1  -5.699] 
   [  9  -1  -5.699] [  8  -1  -5.699] [  7  -1  -5.699] [ 11  -1  -5.699] 
   [ 12  -1  -5.699] [ 13  -1  -5.699] [ 19  -1  -5.699] [ 18  -1  -5.699] 
   [ 17  -1  -5.699] [ 25  -1  -5.699] [ 24  -1  -5.699] [ 23  -1  -5.699] 
   [ 22  -1  -5.699] [ 21  -1  -5.699] [ 29  -1  -5.699] [ 28  -1  -5.699] 
   [ 35  -1  -5.699] [ 34  -1  -5.699] [ 33  -1  -5.699] [ 32  -1  -5.699] 
   [ 31  -1  -5.699] [ 43  -1  -5.699] [ 42  -1  -5.699] [ 39  -1  -5.699] 
   [ 38  -1  -5.699] [ 37  -1  -5.699] [ 45  -1  -5.699] [ 46  -1  -5.699]   
] def
end
%%EndProlog
treedict begin
  /fsize 10 def
  /fbsize 7 def
  Init
  521 144 fsize 1.5 mul add translate
  72 521 sub LEAF length div % x-scale
  699 144 fsize dup add add sub
  SADDEL dup length 1 sub get 2 get /maxy exch def % max height
  9999999 LEAF { aload pop exch pop min } forall
  /miny exch def % min height
  maxy miny sub dup 20 div /MinHeight exch def
  div scale
  .5 LEAF 0 get 1 get neg translate
  SetLabelFont
  Drawlabels
  DrawScale
  SetBarFont
  Connectlmins
  showpage
end
%%EOF
